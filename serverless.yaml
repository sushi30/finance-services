service: hebrew-financial-statement-parser

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  - serverless-python-requirements
custom:
  default_stage: dev
  stage: ${opt:stage, self:custom.default_stage}
  stack_name: ${self:service}-${self:custom.stage}
  region: ${opt:region, self:provider.region}
  s3_bucket_default: ${self:service}.${opt:stage, self:provider.stage}.user.files
  s3_bucket: ${opt:s3_bucket, self:custom.s3_bucket_default}
  s3_bucket_arn: arn:aws:s3:::${self:custom.s3_bucket}
  s3_role_resource: ${self:custom.s3_bucket_arn}/${self:custom.s3_bucket}/*

provider:
  name: aws
  runtime: python3.7
  region: us-west-2
  environment:
    S3_BUCKET: ${self:custom.s3_bucket}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: ${self:custom.s3_role_resource}

functions:
  submitFile:
    name: ${self:custom.stack_name}-submit-file
    description: Generate a presigned URL for PUT upload
    handler: hndle_files/handler.submit
    events:
      - http:
          path: /
          method: post
          cors: true

  getParsed:
    name: ${self:custom.stack_name}-get-parsed
    description: Generate a presigned URL for PUT upload
    handler: handle_files/handler.retrieve
    events:
      - http:
          path: /
          method: get
          cors: true

  processNewFile:
    name: ${self:custom.stack_name}-process-new-file
    description: Generate a presigned URL for PUT upload
    handler: parsers/handler.process_new_file
    events:
      - s3:
          bucket: files
          event: s3:ObjectCreated:*
          rules:
            - prefix: pending/
            - suffix: .xlsx

resources:
  Resources:
    S3BucketFiles:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.s3_bucket}
        LifecycleConfiguration:
          Rules:
            ExpirationInDays: 1